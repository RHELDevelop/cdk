#!/usr/bin/env bash

# Prepare, configure and start OpenShift

set -o pipefail
set -o nounset

export ORIGIN_DIR="/var/lib/origin"
export OPENSHIFT_DIR=${ORIGIN_DIR}/openshift.local.config/master
export KUBECONFIG=${OPENSHIFT_DIR}/admin.kubeconfig


function usage
{
    echo "usage: openshift_provision [[[-r route ] [-host hostname]] | [-h]]"
}

# Command line options

while [ $# -gt 0 ]; do
    case $1 in
        -r | --route )          shift
                                route=$1
                                ;;
        -host | --hostname )    shift
                                host=$1
                                ;;
        -h | --help )           usage
                                exit
                                ;;
        * )                     usage
                                exit 1
    esac
    shift
done

# Give OpenShift time to start
echo "[INFO] Waiting for OpenShift sever to come up ..."
for i in {1..6}
do
  curl -ksSf https://127.0.0.1:8443/api > /dev/null 2>&1
  if [ $? -ne 0 ]; then
    echo "[INFO] ..."
    sleep 5
  else
    break
  fi
done

# Final check whether OpenShift is running
curl -ksSf https://127.0.0.1:8443/api > /dev/null 2>&1
if [ $? -ne 0 ]; then
  >&2 echo "[ERROR] OpenShift failed to start:"
  docker logs openshift
  exit 1
fi

# Make sure kubeconfig is writable
chmod go+r ${KUBECONFIG}

# Create Docker Registry
if [ ! -f ${ORIGIN_DIR}/configured.registry ]; then
  echo "[INFO] Configuring Docker Registry"
  oadm registry --create --credentials=${OPENSHIFT_DIR}/openshift-registry.kubeconfig || exit 1
  oadm policy add-scc-to-group anyuid system:authenticated || exit 1
  touch ${ORIGIN_DIR}/configured.registry
fi

# For router, we have to create service account first and then use it for router creation.
if [ ! -f ${ORIGIN_DIR}/configured.router ]; then
  echo "[INFO] Configuring HAProxy router"
  echo '{"kind":"ServiceAccount","apiVersion":"v1","metadata":{"name":"router"}}' \
    | oc create -f -
  oc get scc privileged -o json \
    | sed '/\"users\"/a \"system:serviceaccount:default:router\",'  \
    | oc replace scc privileged -f -
  oadm router --create \
    --expose-metrics=true \
    --credentials=${OPENSHIFT_DIR}/openshift-router.kubeconfig \
    --service-account=router
  touch ${ORIGIN_DIR}/configured.router

  registry_host_name="hub.$(hostname)"
  oc expose service docker-registry --hostname ${registry_host_name}
fi

# Installing templates into OpenShift
if [ ! -f ${ORIGIN_DIR}/configured.templates ]; then
  echo "[INFO] Installing OpenShift templates"

  # TODO - These list must be verified and completed for a official release
  # Currently templates are sources from three main repositories
  # - openshift/origin
  # - openshift/nodejs-ex
  # - jboss-openshift/application-templates
  ose_tag=ose-v1.1.0
  template_list=(
    # Image streams
    https://raw.githubusercontent.com/openshift/origin/master/examples/image-streams/image-streams-rhel7.json
    https://raw.githubusercontent.com/jboss-openshift/application-templates/${ose_tag}/jboss-image-streams.json
    # DB templates
    https://raw.githubusercontent.com/openshift/origin/master/examples/db-templates/mongodb-ephemeral-template.json
    https://raw.githubusercontent.com/openshift/origin/master/examples/db-templates/mongodb-persistent-template.json
    https://raw.githubusercontent.com/openshift/origin/master/examples/db-templates/mysql-ephemeral-template.json
    https://raw.githubusercontent.com/openshift/origin/master/examples/db-templates/mysql-persistent-template.json
    https://raw.githubusercontent.com/openshift/origin/master/examples/db-templates/postgresql-ephemeral-template.json
    https://raw.githubusercontent.com/openshift/origin/master/examples/db-templates/postgresql-persistent-template.json
    # Jenkins
    https://raw.githubusercontent.com/openshift/origin/master/examples/jenkins/jenkins-ephemeral-template.json
    https://raw.githubusercontent.com/openshift/origin/master/examples/jenkins/jenkins-persistent-template.json
    # Node.js
    https://raw.githubusercontent.com/openshift/nodejs-ex/master/openshift/templates/nodejs-mongodb.json
    https://raw.githubusercontent.com/openshift/nodejs-ex/master/openshift/templates/nodejs.json
    # EAP
    https://raw.githubusercontent.com/jboss-openshift/application-templates/${ose_tag}/eap/eap64-amq-persistent-s2i.json
    https://raw.githubusercontent.com/jboss-openshift/application-templates/${ose_tag}/eap/eap64-amq-s2i.json
    https://raw.githubusercontent.com/jboss-openshift/application-templates/${ose_tag}/eap/eap64-basic-s2i.json
    https://raw.githubusercontent.com/jboss-openshift/application-templates/${ose_tag}/eap/eap64-https-s2i.json
    https://raw.githubusercontent.com/jboss-openshift/application-templates/${ose_tag}/eap/eap64-mongodb-persistent-s2i.json
    https://raw.githubusercontent.com/jboss-openshift/application-templates/${ose_tag}/eap/eap64-mongodb-s2i.json
    https://raw.githubusercontent.com/jboss-openshift/application-templates/${ose_tag}/eap/eap64-mysql-persistent-s2i.json
    https://raw.githubusercontent.com/jboss-openshift/application-templates/${ose_tag}/eap/eap64-mysql-s2i.json
    https://raw.githubusercontent.com/jboss-openshift/application-templates/${ose_tag}/eap/eap64-postgresql-persistent-s2i.json
    https://raw.githubusercontent.com/jboss-openshift/application-templates/${ose_tag}/eap/eap64-postgresql-s2i.json
  )

  for template in ${template_list[@]}; do
    echo "[INFO] Importing template ${template}"
    oc create -f $template -n openshift >/dev/null
  done
  touch ${ORIGIN_DIR}/configured.templates
fi

# Configuring a test-admin user which can view the detault namespace
if [ ! -f ${ORIGIN_DIR}/configured.user ]; then
  echo "[INFO] Creating 'test-admin' user and 'test' project ..."
  oadm policy add-role-to-user view test-admin --config=${OPENSHIFT_DIR}/admin.kubeconfig
  oc login https://$host:8443 -u test-admin -p test \
        --certificate-authority=${OPENSHIFT_DIR}/ca.crt &>/dev/null
  oc new-project test --display-name="OpenShift 3 Sample" \
        --description="This is an example project to demonstrate OpenShift v3" &>/dev/null
  sudo touch ${ORIGIN_DIR}/configured.user
fi
